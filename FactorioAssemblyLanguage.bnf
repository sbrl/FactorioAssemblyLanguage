###
# Factorio Assembly Language, v1.0
###

<program> ::= <statement_list>

<statement_list> ::= <statement>
	| <statement> <statement_list>
	

<statement> ::= <instruction> <ws>
	| <comment_single>
	| <comment_multi>

<instruction> ::= <i_hwconst>
	| <i_const>
	| <i_store>
	| <i_add>
	| <i_sub>
	| <i_mul>
	| <i_div>
	| <i_wait>
	| <i_memget>
	| <i_memset>

<comment_single> ::= "//" <any_multi> <newline>
<comment_multi> ::= "/*" <any_multi_m> "*/"

# HWCONST <NAME> <LIT>
# CONST <NAME> <LIT>
# STORE <INT> <REG>
# ADD <INT> <INT> <REG>
# SUB <INT> <INT> <REG>
# MUL <INT> <INT> <REG>
# DIV <INT> <INT> <REG>
# WAIT <INT> <REG>
# MEMGET <ADDR> <REG>
# MEMSET <INT> <ADDR>

###
# Instructions
###

<i_hwconst>	::= HWCONST	<ws> <name>		<ws> <number>
<i_const>	::= CONST	<ws> <name>		<ws> <number>
<i_store>	::= STORE	<ws> <val_int>	<ws> <register>
<i_add>		::= ADD		<ws> <val_int>	<ws> <val_int>	<ws> <register>
<i_sub>		::= SUB		<ws> <val_int>	<ws> <val_int>	<ws> <register>
<i_mul>		::= MUL		<ws> <val_int>	<ws> <val_int>	<ws> <register>
<i_div>		::= DIV		<ws> <val_int>	<ws> <val_int>	<ws> <register>
<i_wait>	::= WAIT	<ws> <val_int>	<ws> <reg_extdev>
<i_memget>	::= MEMGET	<ws> <mem_addr>	<ws> <register>
<i_memset>	::= MEMSET	<ws> <val_int>	<ws> <mem_addr>

###########################################

###
# Primitives
###

<mem_addr> ::= "#" <number>

<val_int> ::= <register> | <integer> | <name>


<register> ::= <reg_general> | <reg_extdev>

<reg_general> ::= R1 | R2 | R3 | R4
<reg_extdev> ::= EA | EB | EC | ED | EE | EF | EG | EH


<name> ::= <char>
	| <name> <char>
	| <name> <digit>

<integer> ::= "-" <number>
	| <number>

<any_multi> ::= <any> | <any> <any_multi>
<any_multi_m> ::= <any_m> | <any_m> <any_multi_m>
<any_m> ::= <any> | <newline>
<any> ::= <digit> | <char> | " " | "\t" | "\r"

<number> ::= <digit> | <digit> <number>
<digit> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

<char> ::= a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z
	|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z

<ws> ::= <delimiter> | <delimiter> <ws>
<delimiter> ::= " " | "\t" | "\r" | <newline>
<newline> ::= "\n"